{
  "tests": [
    {
      "name": "Flip one coin",
      "setup": "",
      "run": "node flip.js",
      "input": "",
      "output": "[\"']?(heads?|tails?)[\"']?",
      "comparison": "regex",
      "timeout": 10,
      "points": 13888
    },
    {
      "name": "Flip many coins with no argument",
      "setup": "npm install",
      "run": "node flips.js",
      "input": "",
      "output": "(\\[?\\s?['\"]?(heads|tails)['\"]?.*\\])(\\n|\\t|\\s|\\r)+(\\{.*\\s?['\"]?(heads|tails)\\s?['\"]?:\\s?['\"]?1['\"]?.*?\\s?\\})",
      "comparison": "regex",
      "timeout": 10,
      "points": 13889
    },
    {
      "name": "Flip many coins with random number argument",
      "setup": "",
      "run": "NUMBER=\"$(shuf -i 100-500 -n 1)\" && node flips.js --number=$NUMBER",
      "input": "",
      "output": "\\{(\\s?['\"]?(heads|tails)\\s?['\"]?:\\s?['\"]?[0-9]{1,3}['\"]?\\s?,)?\\s?['\"]?(heads|tails)\\s?['\"]?:\\s?['\"]?[0-9]{1,3}['\"]?\\s?\\}",
      "comparison": "regex",
      "timeout": 10,
      "points": 13889
    },
    {
      "name": "Guess coin flip with no argument",
      "setup": "",
      "run": "node guess-flip.js 2>&1",
      "input": "",
      "output": ".*[Ee]rror\\s?:?\\s?no\\sinput.*",
      "comparison": "regex",
      "timeout": 10,
      "points": 13889
    },
    {
      "name": "Guess flip with argument other than heads or tails",
      "setup": "SHELL=/bin/bash",
      "run": "node guess-flip.js --call=notaword",
      "input": "",
      "output": ".*Usage:\\s?node\\sguess-flip(.js)?\\s--call=(\\[|\\(|\\{)?\\s?(heads?|tails?)\\s?\\|\\s?[\"']?(heads?|tails?)[\"']?\\s?(\\]|\\)\\}).*",
      "comparison": "regex",
      "timeout": 10,
      "points": 13889
    },
    {
      "name": "Guess flip heads or tails",
      "setup": "SHELL=/bin/bash",
      "run": "printf \"heads\\ntails\\n\" > wordfile && CALL=$(shuf -n1 ./wordfile) && node guess-flip --call=$CALL",
      "input": "",
      "output": "(\\[|\\{)\\s?[\"']?call[\"']?\\s?:\\s?[\"']?(heads?|tails?)[\"']?\\s?,\\s?[\"']?flip[\"']?\\s?:\\s?[\"']?(heads?|tails?)[\"']?\\s?,\\s?[\"']?results?[\"']?\\s?:\\s?[\"']?(win|lose)[\"']?\\s?(\\]|\\})",
      "comparison": "regex",
      "timeout": 10,
      "points": 13889
    },
    {
      "name": "Node version",
      "setup": "",
      "run": "node -v",
      "input": "",
      "output": "",
      "comparison": "included",
      "timeout": 10,
      "points": null
    }
  ]
}